context:
  version: "1.3.0"
  build_number: 0

recipe:
  name: sparrow-packages
  version: ${{ version }}

source:
  url: https://github.com/man-group/sparrow/archive/${{ version }}.tar.gz
  sha256: 2b880f63cdff9dd43231f9d5935fe456f9588917fd5760bc33e849c784a1666c

build:
  number: ${{ build_number }}

outputs:
  - package:
      name: sparrow
      version: ${{ version }}
    build:
      script: build
      files:
        - if: linux
          then:
            - lib/libsparrow.so*
        - if: osx
          then:
            - lib/libsparrow.*dylib
        - if: win
          then:
            - Library/bin/sparrow.dll
            - Library/lib/sparrow.lib
    requirements:
      run_exports:
        - ${{ pin_subpackage('sparrow', upper_bound='x.x') }}
      build:
        - ${{ compiler('cxx') }}
        - ${{ stdlib('c') }}
        - cmake
        - if: unix
          then: make
        - if: win
          then: ninja
      host:
        - howardhinnant_date >=3,<4
      #run:
        # howardhinnant_date has run_exports
    tests:
      - script:
        - if: unix
          then:
            - test -f ${PREFIX}/lib/libsparrow${SHLIB_EXT}
        - if: win
          then:
            - if not exist %LIBRARY_PREFIX%\bin\sparrow.dll (exit 1)
            - if not exist %LIBRARY_PREFIX%\lib\sparrow.lib (exit 1)

  - package:
      name: sparrow-devel
      version: ${{ version }}
    build:
      script: build
      files:
        include:
          - ${{ "Library/" if win }}include/**/*.hpp
          - ${{ "Library/" if win }}share/cmake/sparrow/sparrowConfig.cmake
          - ${{ "Library/" if win }}share/cmake/sparrow/sparrowConfigVersion.cmake
          - ${{ "Library/" if win }}share/cmake/sparrow/sparrowTargets.cmake
          - ${{ "Library/" if win }}share/cmake/sparrow/sparrowTargets-release.cmake
          - if: win
            then:
              - Library/debug
        exclude:
          - ${{ "Library/" if win }}include/sparrow/json_reader/*.hpp
    requirements:
      run_exports:
        - ${{ pin_subpackage('sparrow', upper_bound='x.x') }}
      build:
        - ${{ compiler('cxx') }}
        - ${{ stdlib('c') }}
        - cmake
        - if: unix
          then: make
        - if: win
          then: ninja
      host:
        - howardhinnant_date >=3,<4
        - ${{ pin_subpackage('sparrow', exact=True) }}
      #run:
        # howardhinnant_date has run_exports
    tests:
      - script:
        - if: unix
          then:
            - test -f ${PREFIX}/include/sparrow/buffer/buffer.hpp
            - test -f ${PREFIX}/include/sparrow/config/sparrow_version.hpp
            - test -f ${PREFIX}/share/cmake/sparrow/sparrowConfig.cmake
            - test -f ${PREFIX}/share/cmake/sparrow/sparrowConfigVersion.cmake
            - test -f ${PREFIX}/share/cmake/sparrow/sparrowTargets.cmake
            - test -f ${PREFIX}/share/cmake/sparrow/sparrowTargets-release.cmake
        - if: win
          then:
            - if not exist %LIBRARY_PREFIX%\include\sparrow\buffer\buffer.hpp (exit 1)
            - if not exist %LIBRARY_PREFIX%\include\sparrow\config\sparrow_version.hpp (exit 1)
            - if not exist %LIBRARY_PREFIX%\share\cmake\sparrow\sparrowConfig.cmake (exit 1)
            - if not exist %LIBRARY_PREFIX%\share\cmake\sparrow\sparrowConfigVersion.cmake (exit 1)
            - if not exist %LIBRARY_PREFIX%\share\cmake\sparrow\sparrowTargets.cmake (exit 1)
  - package:
      name: sparrow-json-reader
      version: ${{ version }}
    build:
      script: build
      files:
        - ${{ "Library/" if win }}include/sparrow/json_reader/*.hpp
        - ${{ "Library/" if win }}share/cmake/sparrow-json-reader/sparrow-json-readerConfig.cmake
        - ${{ "Library/" if win }}share/cmake/sparrow-json-reader/sparrow-json-readerConfigVersion.cmake
        - ${{ "Library/" if win }}share/cmake/sparrow-json-reader/sparrow-json-readerTargets.cmake
        - ${{ "Library/" if win }}share/cmake/sparrow-json-reader/sparrow-json-readerTargets-release.cmake
        - if: linux
          then:
            - lib/libsparrow_json_reader.so*
        - if: osx
          then:
            - lib/libsparrow_json_reader.*dylib
        - if: win
          then:
            - Library/bin/sparrow_json_reader.dll
            - Library/lib/sparrow_json_reader.lib
    requirements:
      run_exports:
        - ${{ pin_subpackage('sparrow-json-reader', upper_bound='x.x') }}
      build:
        - ${{ compiler('cxx') }}
        - ${{ stdlib('c') }}
        - cmake
        - if: unix
          then: make
        - if: win
          then: ninja
      host:
        - howardhinnant_date >=3,<4
        - nlohmann_json >=3,<4
        - nlohmann_json-abi
        - ${{ pin_subpackage('sparrow-devel', exact=True) }}
      #run:
        # howardhinnant_date has run_exports
    tests:
      - script:
        - if: unix
          then:
            - test -f ${PREFIX}/include/sparrow/json_reader/json_parser.hpp
            - test -f ${PREFIX}/lib/libsparrow_json_reader${SHLIB_EXT}
            - test -f ${PREFIX}/share/cmake/sparrow-json-reader/sparrow-json-readerConfig.cmake
            - test -f ${PREFIX}/share/cmake/sparrow-json-reader/sparrow-json-readerConfigVersion.cmake
            - test -f ${PREFIX}/share/cmake/sparrow-json-reader/sparrow-json-readerTargets.cmake
            - test -f ${PREFIX}/share/cmake/sparrow-json-reader/sparrow-json-readerTargets-release.cmake
        - if: win
          then:
            - if not exist %LIBRARY_PREFIX%\include\sparrow\json_reader\json_parser.hpp (exit 1)
            - if not exist %LIBRARY_PREFIX%\bin\sparrow_json_reader.dll (exit 1)
            - if not exist %LIBRARY_PREFIX%\lib\sparrow_json_reader.lib (exit 1)
            - if not exist %LIBRARY_PREFIX%\share\cmake\sparrow-json-reader\sparrow-json-readerConfig.cmake (exit 1)
            - if not exist %LIBRARY_PREFIX%\share\cmake\sparrow-json-reader\sparrow-json-readerConfigVersion.cmake (exit 1)
            - if not exist %LIBRARY_PREFIX%\share\cmake\sparrow-json-reader\sparrow-json-readerTargets.cmake (exit 1)
            - if not exist %LIBRARY_PREFIX%\share\cmake\sparrow-json-reader\sparrow-json-readerTargets-release.cmake (exit 1)


about:
  homepage: https://github.com/man-group/sparrow
  repository: https://github.com/man-group/sparrow
  documentation: https://man-group.github.io/sparrow
  description: C++20 idiomatic APIs for the Apache Arrow Columnar Format
  summary: C++20 idiomatic APIs for the Apache Arrow Columnar Format
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE

extra:
  recipe-maintainers:
    - jjerphan
    - JohanMabille
    - Klaim
