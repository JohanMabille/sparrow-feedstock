context:
  version: "1.1.2"
  build_number: 1

recipe:
  name: sparrow-packages
  version: ${{ version }}

source:
  url: https://github.com/man-group/sparrow/archive/${{ version }}.tar.gz
  sha256: b8c86d88a691d8875f1e0b23b9a2b39028f9c94968b11ba58ac988863ea1bf08

build:
  number: ${{ build_number }}

outputs:
  - package:
      name: sparrow
      version: ${{ version }}
    build:
      script: build
      files:
        - lib/libsparrow.so*
    requirements:
      run_exports:
        - ${{ pin_subpackage('sparrow', upper_bound='x.x') }}
      build:
        - ${{ compiler('cxx') }}
        - ${{ stdlib('c') }}
        - cmake
        - if: unix
          then: make
      host:
        - howardhinnant_date >=3,<4
      #run:
        # howardhinnant_date has run_exports
    tests:
      - script:
        - if: unix
          then:
            - test -f ${PREFIX}/lib/libsparrow.so
        - if: win
          then:
            - if not exist %LIBRARY_PREFIX%\lib\libsparrow.so (exit 1)

  - package:
      name: sparrow-devel
      version: ${{ version }}
    build:
      script: build
      files:
        - include/
        - share/cmake/
        - lib/libsparrow_json_reader.so*
    requirements:
      run_exports:
        - ${{ pin_subpackage('sparrow-devel', upper_bound='x.x') }}
      build:
        - ${{ compiler('cxx') }}
        - ${{ stdlib('c') }}
        - cmake
        - if: unix
          then: make
      host:
        - howardhinnant_date >=3,<4
        - nlohmann_json >=3,<4
        - ${{ pin_subpackage('sparrow', exact=True) }}
      run:
        # howardhinnant_date has run_exports
        - ${{ pin_compatible('nlohmann_json', upper_bound='x.x.x') }}
        - ${{ pin_subpackage('sparrow', exact=True) }}
    tests:
      - script:
        - if: unix
          then:
            - test -f ${PREFIX}/include/sparrow/buffer/buffer.hpp
            - test -f ${PREFIX}/include/sparrow/config/sparrow_version.hpp
            - test -f ${PREFIX}/share/cmake/sparrow/sparrowConfig.cmake
            - test -f ${PREFIX}/share/cmake/sparrow/sparrowConfigVersion.cmake
            - test -f ${PREFIX}/share/cmake/sparrow/sparrowTargets.cmake
            - test -f ${PREFIX}/include/sparrow/json_reader/json_parser.hpp
            - grep "sparrow::json_reader" ${PREFIX}/share/cmake/sparrow/sparrowTargets.cmake
        - if: win
          then:
            - if not exist %LIBRARY_PREFIX%\include\sparrow\buffer\buffer.hpp (exit 1)
            - if not exist %LIBRARY_PREFIX%\include\sparrow\config\sparrow_version.hpp (exit 1)
            - if not exist %LIBRARY_PREFIX%\share\cmake\sparrow\sparrowConfig.cmake (exit 1)
            - if not exist %LIBRARY_PREFIX%\share\cmake\sparrow\sparrowConfigVersion.cmake (exit 1)
            - if not exist %LIBRARY_PREFIX%\share\cmake\sparrow\sparrowTargets.cmake (exit 1)
            - if not exist %LIBRARY_PREFIX%\include\sparrow\json_reader\json_parser.hpp (exit 1)
            - if not findstr "sparrow::json_reader" %LIBRARY_PREFIX%\share\cmake\sparrow\sparrowTargets.cmake (exit 1)

about:
  homepage: https://github.com/man-group/sparrow
  repository: https://github.com/man-group/sparrow
  documentation: https://man-group.github.io/sparrow
  description: C++20 idiomatic APIs for the Apache Arrow Columnar Format
  summary: C++20 idiomatic APIs for the Apache Arrow Columnar Format
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE

extra:
  recipe-maintainers:
    - jjerphan
    - JohanMabille
    - Klaim
